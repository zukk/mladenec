# Базовый источник
###################################################
source base
{
    type              = mysql
    sql_host          = localhost
    sql_user          = bitrix_mladenec_
    sql_pass          = KJnkf45lkmgg
    sql_db            = bitrix_mladenec_bak

    sql_query_pre   = SET NAMES utf8
}

# Базовый индекс
###################################################
index base
{
    path = /home/admin/sites/mladenec/application/cache/base

    charset_type            = utf-8
    morphology              = stem_enru
    min_word_len            = 2
    expand_keywords         = 1
    index_exact_words       = 1
    html_remove_elements    = style, script
    html_strip              = 1
    ignore_chars            = U+AD
    stopwords               = /home/admin/sites/mladenec/application/config/stopwords.txt
    charset_table = 0..9, a..z, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0401->U+0435, U+0451->U+0435, U+0451->U+0435, U+0407->U+0457, U+0406->U+0456, U+0404->U+0454,U+00C0->a, U+00C1->a, U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e, U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i, U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o, U+00D6->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u, U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a, U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e, U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o, U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F9->u, U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a, U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c, U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c, U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e, U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e, U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g, U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i, U+0129->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i, U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k, U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l, U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n, U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o, U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r, U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s, U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t, U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u, U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u, U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y, U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z, U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a, U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u, U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u, U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a, U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o, U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g, U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a, U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e, U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o, U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r, U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s, U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a, U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o, U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y, U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b, U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d, U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d, U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e, U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e, U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h, U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h, U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i, U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k, U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l, U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m, U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n, U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o, U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o, U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r, U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r, U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s, U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t, U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t, U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u, U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v, U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w, U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w, U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y, U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a, U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a, U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a, U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a, U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e, U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e, U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e, U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i, U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o, U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o, U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o, U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o, U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u, U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u, U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y, U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
}

# Индекс по товарам мой, сначала обычные товары, потом одежда
#############################################################
source goods_zukk : base
{
    sql_query    = \
        SELECT id, @rn := @rn +1 AS alphabet, grouped, hit, shop_id, section_id, group_id, price, priceitem, brand_id, country_id, popularity, s_popularity, x, discount, superprice, short_name, words, nt, stroller_weight, stroller_shassi \
        FROM ( \
            (SELECT  g.id, 0 as grouped, IF(h.good_id IS NOT NULL, 1, 0) as hit, IF(gr.vitrina = 'mladenec', 1, IF(gr.vitrina = 'ogurchik', 2, 0)) as shop_id, \
                     g.section_id, g.group_id, g.price*100 AS price, IF (g.per_pack, ROUND(g.price/g.per_pack*100), 50000) as priceitem, g.brand_id, g.country_id, IF( g.order > 0, 100000+g.order, g.popularity) AS popularity, g.popularity AS s_popularity, \
                     g.qty != 0 AS x, IF (g.old_price > 0 , 1, 0) as discount, p.superprice, \
                 CONCAT( g.group_name, ' ', g.name ) AS short_name, \
                 CONCAT( s.name, ' ', b.name, ' ', g.id1c, ' ', p.search, ' ', b.search_words, IF(c.name IS NOT NULL, c.name, '') ) AS words, UNIX_TIMESTAMP( p.new_till ) AS nt, \
                 ROUND(fv1.name * 10) as stroller_weight, ROUND(fv2.name) as stroller_shassi \
            FROM z_good g \
                 JOIN z_good_prop p ON ( g.id = p.id ) \
                 JOIN z_group gr ON ( g.group_id = gr.id AND gr.active = 1 ) \
                 JOIN z_brand b ON ( g.brand_id = b.id AND b.active = 1 ) \
            LEFT JOIN z_country c ON ( c.id = g.country_id ) \
            LEFT JOIN z_hit h ON (g.id = h.good_id) \
             \
            LEFT JOIN z_good_filter fg1 ON (fg1.good_id = g.id AND fg1.filter_id = 2329) \
            LEFT JOIN z_filter_value fv1 ON (fg1.value_id = fv1.id) \
             \
            LEFT JOIN z_good_filter fg2 ON (fg2.good_id = g.id AND fg2.filter_id = 2324) \
            LEFT JOIN z_filter_value fv2 ON (fg2.value_id = fv2.id) \
             \
            INNER JOIN z_section s ON ( g.section_id = s.id AND s.active = 1 ) \
                 WHERE g.active = 1 AND g.show = 1 AND gr.good = 0 AND (UNIX_TIMESTAMP(p.last_seen) >= UNIX_TIMESTAMP(NOW())-90*24*60*60 OR g.qty != 0) \
            ) \
            UNION \
            (SELECT  g.id, 1 as grouped, IF(h.good_id IS NOT NULL, 1, 0) as hit, IF(gr.vitrina = 'mladenec', 1, IF(gr.vitrina = 'ogurchik', 2, 0)) as shop_id, \
                gr.section_id, g.group_id, MIN(g.price)*100 AS price, 50000 as priceitem, g.brand_id, g.country_id, IF( g.order > 0, 100000+g.order, g.popularity) AS popularity, g.popularity AS s_popularity, \
                g.qty != 0 AS x, IF (g.old_price > 0 , 1, 0) as discount, p.superprice, \
                CONCAT( g.group_name, ' ', GROUP_CONCAT(g.name) ) AS short_name, \
                CONCAT( s.name, ' ', b.name, ' ', GROUP_CONCAT(CONCAT(g.id1c, ' ', p.search)), ' ', b.search_words ) AS words, UNIX_TIMESTAMP( MAX(p.new_till) ) AS nt, \
                0 as stroller_weight, 0 as stroller_shassi \
            FROM z_good g \
                JOIN z_good_prop p ON ( g.id = p.id ) \
                JOIN good_color gc on (gc.good_id = g.id) \
                JOIN z_group gr ON ( g.group_id = gr.id AND gr.active = 1 ) \
                JOIN z_brand b ON ( g.brand_id = b.id AND b.active = 1 ) \
            LEFT JOIN z_hit h ON (g.id = h.good_id) \
            LEFT JOIN z_good_filter gf ON ( g.id = gf.good_id ) \
            INNER JOIN z_section s ON ( g.section_id = s.id AND s.active = 1 ) \
                WHERE g.active = 1 AND g.show = 1 AND gr.good = 1 AND g.qty != 0 AND (UNIX_TIMESTAMP(p.last_seen) >= UNIX_TIMESTAMP(NOW())-90*24*60*60 OR g.qty != 0) \
                GROUP BY gr.id, color \
            ) \
            ORDER BY short_name \
        ) AS t, (SELECT @rn :=0) AS rn

    sql_attr_multi = uint fvalue from query; \
            SELECT z_good_filter.good_id, z_good_filter.value_id FROM z_good_filter \
            INNER JOIN z_good ON (z_good .id = z_good_filter.good_id AND z_good.show = 1 AND z_good.active = 1) \
        UNION \
            SELECT id as good_id , brand_id as value_id FROM z_good WHERE `show` = 1 AND active = 1

    sql_attr_multi = uint action_id from query; \
        SELECT ag.good_id, ag.action_id FROM z_action_good ag \
            INNER JOIN z_action a ON (a.id = action_id) \
            INNER JOIN z_good g ON (g.id = ag.good_id AND g.show = 1) \
        WHERE a.`show`= 1 AND a.active = 1 \
        UNION \
        SELECT id, 1 as action_id FROM z_good where `show` = 1 AND `old_price` > 0


    sql_attr_bool = x
    sql_attr_bool = discount
    sql_attr_bool = grouped
    sql_attr_bool = superprice
    sql_attr_bool = hit
    sql_attr_uint = shop_id
    sql_attr_uint = alphabet
    sql_attr_uint = popularity
    sql_attr_uint = s_popularity
    sql_attr_uint = group_id
    sql_attr_uint = section_id
    sql_attr_uint = brand_id
    sql_attr_uint = country_id
    sql_attr_uint = price
    sql_attr_uint = priceitem
    sql_attr_uint = nt
    # эти поля работают только для колясок - вес коляски умноженный на 10 и ширина шасси в см
    sql_attr_uint = stroller_weight
    sql_attr_uint = stroller_shassi
}

# Индекс по товарам мой
###################################################
index goods_zukk
{
    source = goods_zukk
    path = /home/admin/sites/mladenec/application/cache/goods_zukk
    charset_type = utf-8

    morphology = stem_enru
    min_word_len = 2
    html_remove_elements = style, script
    html_strip = 1 
}

# Настройка индексатора
###################################################
indexer
{
    mem_limit       = 128M
    write_buffer    = 8M
}

source goods_suggest : base
{
    sql_query    = \
        SELECT g.id, CONCAT(g.name, ' ', g.group_name) AS words, g.price, \
            IF(gr.vitrina = 'mladenec', 1, IF(gr.vitrina = 'ogurchik', 2, 0)) as shop_id, \
            IF( g.order > 0, 100000+g.order, g.popularity) AS popularity, \
            g.qty != 0 AS x \
        FROM z_good g \
            JOIN z_good_prop p ON (p.id = g.id) \
            JOIN z_group gr ON (g.group_id = gr.id AND gr.active = 1 ) \
            JOIN z_brand b ON (g.brand_id = b.id AND b.active = 1) \
            JOIN z_section s ON (g.section_id = s.id AND s.active = 1) \
        WHERE g.`show` != 0 AND g.active = 1 AND (UNIX_TIMESTAMP(p.last_seen) >= UNIX_TIMESTAMP(NOW())-90*24*60*60 OR g.qty != 0)

    sql_attr_bool = x
    sql_attr_uint = price
    sql_attr_uint = shop_id
    sql_attr_uint = popularity
}

index goods_suggest
{
    source = goods_suggest
    path = /home/admin/sites/mladenec/application/cache/goods_suggest
    charset_type = utf-8

    morphology = stem_enru
    min_word_len = 2
    html_remove_elements = style, script
    html_strip = 1
    min_infix_len = 2
    enable_star = 1
    index_exact_words = 1
}

source suggest : base
{
	sql_query = SELECT id, trigrams, freq, LENGTH(keyword) AS len FROM z_suggest
	sql_attr_uint = freq
	sql_attr_uint = len
}

index suggest
{
    source = suggest
    path = /home/admin/sites/mladenec/application/cache/suggest
    charset_type = utf-8

    morphology = stem_enru
    min_word_len = 2
}


# Настройка searchd
###################################################
searchd
{
    # Адрес сервера
    listen = localhost:9306:mysql41

	# Лог
	log = /home/admin/sites/mladenec/sphinx/searchd.log

	# Лог запросов
	query_log = /home/admin/sites/mladenec/sphinx/query.log

	# Таймаут на соединение с сервером (в секундах). При истечении времени происходит обрыв
	read_timeout = 5

	# Максимальное кол-во потомков от процесса
	max_children = 30

	# Путь до pid-файла
	pid_file = /home/admin/sites/mladenec/sphinx/searchd.pid

    # Максимальное кол-во результатов выдачи
    max_matches = 2000

    thread_stack = 256K

    dist_threads = 3
}